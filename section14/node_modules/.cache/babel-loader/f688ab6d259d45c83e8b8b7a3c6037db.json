{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react\\\\section14\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMovieHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const reponse = await fetch(\"https://swapi.dev/api/films/\");\n      const data = await reponse.json();\n\n      if (!reponse.ok) {\n        throw new Error(\"SAI RUIIIIIII\");\n      }\n\n      const transformMovies = data.results.map(moviesData => {\n        return {\n          id: moviesData.episode_id,\n          title: moviesData.title,\n          openingText: moviesData.opening_crawl,\n          releaseDate: moviesData.release_date\n        };\n      });\n      setMovies(transformMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 47\n    }\n  }, \" no movies found\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }, \"LOADINGGGGGGG\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react/section14/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","reponse","fetch","data","json","ok","Error","transformMovies","results","map","moviesData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AACA,iBAAeS,iBAAf,GAAmC;AACjCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,OAAO,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA3B;AACA,YAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;;AACA,UAAI,CAACH,OAAO,CAACI,EAAb,EAAiB;AACf,cAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED,YAAMC,eAAe,GAAGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAkBC,UAAD,IAAgB;AACvD,eAAO;AACLC,UAAAA,EAAE,EAAED,UAAU,CAACE,UADV;AAELC,UAAAA,KAAK,EAAEH,UAAU,CAACG,KAFb;AAGLC,UAAAA,WAAW,EAAEJ,UAAU,CAACK,aAHnB;AAILC,UAAAA,WAAW,EAAEN,UAAU,CAACO;AAJnB,SAAP;AAMD,OAPuB,CAAxB;AAQAtB,MAAAA,SAAS,CAACY,eAAD,CAAT;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAjBD,CAiBE,OAAOC,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;AACD;AACF;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAElB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,IAAcF,MAAM,CAACyB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEzB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACyB,MAAP,KAAkB,CAAhC,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFxC,EAGGvB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHhB,CAJF,CADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  async function fetchMovieHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const reponse = await fetch(\"https://swapi.dev/api/films/\");\n      const data = await reponse.json();\n      if (!reponse.ok) {\n        throw new Error(\"SAI RUIIIIIII\");\n      }\n\n      const transformMovies = data.results.map((moviesData) => {\n        return {\n          id: moviesData.episode_id,\n          title: moviesData.title,\n          openingText: moviesData.opening_crawl,\n          releaseDate: moviesData.release_date,\n        };\n      });\n      setMovies(transformMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p> no movies found</p>}\n        {isLoading && <p>LOADINGGGGGGG</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}